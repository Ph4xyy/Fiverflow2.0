# Script de test pour v√©rifier la solution sans RPC
# V√©rifie que la gestion des profils utilisateurs fonctionne avec du JavaScript direct

Write-Host "üß™ Test de la Solution Sans RPC" -ForegroundColor Cyan
Write-Host "===============================" -ForegroundColor Cyan

Write-Host "`nüéØ Objectif:" -ForegroundColor Yellow
Write-Host "V√©rifier que la gestion des profils utilisateurs fonctionne" -ForegroundColor White
Write-Host "avec du JavaScript direct, sans d√©pendre des fonctions RPC." -ForegroundColor White

# V√©rifier les fichiers modifi√©s
Write-Host "`n1. V√©rification des fichiers modifi√©s..." -ForegroundColor Yellow

$filesToCheck = @(
    "src/utils/userProfileManager.ts",
    "src/pages/AdminDashboard.tsx",
    "src/components/Layout.tsx"
)

foreach ($file in $filesToCheck) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file trouv√©" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
    }
}

# V√©rifier le contenu des fichiers
Write-Host "`n2. V√©rification du contenu..." -ForegroundColor Yellow

# V√©rifier UserProfileManager
if (Test-Path "src/utils/userProfileManager.ts") {
    $userProfileManager = Get-Content "src/utils/userProfileManager.ts" -Raw
    
    if ($userProfileManager -match "class UserProfileManager") {
        Write-Host "‚úÖ Classe UserProfileManager cr√©√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Classe UserProfileManager manquante" -ForegroundColor Red
    }
    
    if ($userProfileManager -match "checkProfileExists") {
        Write-Host "‚úÖ M√©thode checkProfileExists impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå M√©thode checkProfileExists manquante" -ForegroundColor Red
    }
    
    if ($userProfileManager -match "createProfile") {
        Write-Host "‚úÖ M√©thode createProfile impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå M√©thode createProfile manquante" -ForegroundColor Red
    }
    
    if ($userProfileManager -match "updateProfile") {
        Write-Host "‚úÖ M√©thode updateProfile impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå M√©thode updateProfile manquante" -ForegroundColor Red
    }
    
    if ($userProfileManager -match "ensureProfile") {
        Write-Host "‚úÖ M√©thode ensureProfile impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå M√©thode ensureProfile manquante" -ForegroundColor Red
    }
    
    if ($userProfileManager -match "checkAdminStatus") {
        Write-Host "‚úÖ M√©thode checkAdminStatus impl√©ment√©e" -ForegroundColor Green
    } else {
        Write-Host "‚ùå M√©thode checkAdminStatus manquante" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Fichier UserProfileManager non trouv√©" -ForegroundColor Red
}

# V√©rifier AdminDashboard
if (Test-Path "src/pages/AdminDashboard.tsx") {
    $adminDashboard = Get-Content "src/pages/AdminDashboard.tsx" -Raw
    
    if ($adminDashboard -match "UserProfileManager") {
        Write-Host "‚úÖ AdminDashboard utilise UserProfileManager" -ForegroundColor Green
    } else {
        Write-Host "‚ùå AdminDashboard n'utilise pas UserProfileManager" -ForegroundColor Red
    }
    
    if ($adminDashboard -match "ensure_user_profile") {
        Write-Host "‚ùå AdminDashboard contient encore des appels RPC" -ForegroundColor Red
    } else {
        Write-Host "‚úÖ AdminDashboard ne contient plus d'appels RPC" -ForegroundColor Green
    }
    
    if ($adminDashboard -match "checkAdminStatus.*user") {
        Write-Host "‚úÖ AdminDashboard utilise checkAdminStatus" -ForegroundColor Green
    } else {
        Write-Host "‚ùå AdminDashboard n'utilise pas checkAdminStatus" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Fichier AdminDashboard non trouv√©" -ForegroundColor Red
}

# V√©rifier Layout
if (Test-Path "src/components/Layout.tsx") {
    $layout = Get-Content "src/components/Layout.tsx" -Raw
    
    if ($layout -match "UserProfileManager") {
        Write-Host "‚úÖ Layout utilise UserProfileManager" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Layout n'utilise pas UserProfileManager" -ForegroundColor Red
    }
    
    if ($layout -match "ensure_user_profile") {
        Write-Host "‚ùå Layout contient encore des appels RPC" -ForegroundColor Red
    } else {
        Write-Host "‚úÖ Layout ne contient plus d'appels RPC" -ForegroundColor Green
    }
    
    if ($layout -match "checkAdminStatus.*user") {
        Write-Host "‚úÖ Layout utilise checkAdminStatus" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Layout n'utilise pas checkAdminStatus" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Fichier Layout non trouv√©" -ForegroundColor Red
}

# V√©rifier qu'il n'y a plus d'appels RPC dans le code
Write-Host "`n3. V√©rification des appels RPC restants..." -ForegroundColor Yellow

$rpcCalls = Get-ChildItem "src" -Recurse -Include "*.tsx", "*.ts" | 
    ForEach-Object { Get-Content $_.FullName -Raw } | 
    Select-String -Pattern "\.rpc\(" | 
    Measure-Object

if ($rpcCalls.Count -eq 0) {
    Write-Host "‚úÖ Aucun appel RPC trouv√© dans le code" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è $($rpcCalls.Count) appel(s) RPC encore pr√©sent(s)" -ForegroundColor Yellow
}

# Instructions de test
Write-Host "`n4. Instructions de test:" -ForegroundColor Yellow
Write-Host "=========================" -ForegroundColor Yellow

Write-Host "`nPour tester la solution sans RPC:" -ForegroundColor White
Write-Host "1. Red√©marrez l'application: npm run dev" -ForegroundColor Gray
Write-Host "2. Connectez-vous avec votre compte" -ForegroundColor Gray
Write-Host "3. V√©rifiez qu'il n'y a plus d'erreur 404 dans la console" -ForegroundColor Gray
Write-Host "4. V√©rifiez que l'acc√®s admin fonctionne" -ForegroundColor Gray
Write-Host "5. Testez sur votre autre ordinateur" -ForegroundColor Gray

Write-Host "`n5. Avantages de cette solution:" -ForegroundColor Yellow
Write-Host "===============================" -ForegroundColor Yellow

Write-Host "‚úÖ Plus d'erreur 404 (pas de d√©pendance aux fonctions RPC)" -ForegroundColor Green
Write-Host "‚úÖ Logique JavaScript directe et simple" -ForegroundColor Green
Write-Host "‚úÖ Gestion compl√®te des profils (v√©rifier/cr√©er/mettre √† jour)" -ForegroundColor Green
Write-Host "‚úÖ Code r√©utilisable avec la classe UserProfileManager" -ForegroundColor Green
Write-Host "‚úÖ Gestion des erreurs robuste" -ForegroundColor Green
Write-Host "‚úÖ Logs d√©taill√©s pour le debugging" -ForegroundColor Green

Write-Host "`n6. Fonctionnalit√©s de UserProfileManager:" -ForegroundColor Yellow
Write-Host "=========================================" -ForegroundColor Yellow

Write-Host "‚úÖ checkProfileExists() - V√©rifie si un profil existe" -ForegroundColor Green
Write-Host "‚úÖ createProfile() - Cr√©e un nouveau profil" -ForegroundColor Green
Write-Host "‚úÖ updateProfile() - Met √† jour un profil existant" -ForegroundColor Green
Write-Host "‚úÖ ensureProfile() - G√®re automatiquement (v√©rifie/cr√©e/met √† jour)" -ForegroundColor Green
Write-Host "‚úÖ checkAdminStatus() - V√©rifie le statut admin" -ForegroundColor Green
Write-Host "‚úÖ promoteToAdmin() - Promouvoir en admin" -ForegroundColor Green
Write-Host "‚úÖ demoteFromAdmin() - R√©trograder" -ForegroundColor Green

Write-Host "`nüéØ La solution sans RPC est pr√™te !" -ForegroundColor Cyan
Write-Host "Plus d'erreur 404, plus de d√©pendance aux fonctions RPC." -ForegroundColor White
Write-Host "Tout est g√©r√© avec du JavaScript direct et simple." -ForegroundColor White
