# V√©rification finale que l'erreur ReferenceError est corrig√©e
# Ce script v√©rifie que toutes les corrections sont en place

Write-Host "üîç V√©rification finale - Correction ReferenceError" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan

# V√©rifier que le fichier StatsPage.tsx existe et est correct
if (Test-Path "src/pages/StatsPage.tsx") {
    Write-Host "‚úÖ src/pages/StatsPage.tsx - Trouv√©" -ForegroundColor Green
    
    $content = Get-Content "src/pages/StatsPage.tsx" -Raw
    
    # V√©rifications sp√©cifiques
    if ($content -match "pendingOrdersCount") {
        Write-Host "‚úÖ pendingOrdersCount est d√©fini" -ForegroundColor Green
    } else {
        Write-Host "‚ùå pendingOrdersCount manquant" -ForegroundColor Red
    }
    
    if ($content -match "useDashboardStats") {
        Write-Host "‚úÖ useDashboardStats est utilis√©" -ForegroundColor Green
    } else {
        Write-Host "‚ùå useDashboardStats non utilis√©" -ForegroundColor Red
    }
    
    if ($content -match "pendingOrders\.") {
        Write-Host "‚ùå R√©f√©rence directe √† pendingOrders trouv√©e" -ForegroundColor Red
    } else {
        Write-Host "‚úÖ Plus de r√©f√©rence directe √† pendingOrders" -ForegroundColor Green
    }
    
    # V√©rifier que les imports sont corrects
    if ($content -match "import.*useDashboardStats") {
        Write-Host "‚úÖ Import useDashboardStats correct" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Import useDashboardStats manquant" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚ùå src/pages/StatsPage.tsx - Manquant" -ForegroundColor Red
}

# V√©rifier que le hook useDashboardStats existe
if (Test-Path "src/hooks/useDashboardStats.ts") {
    Write-Host "‚úÖ src/hooks/useDashboardStats.ts - Trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå src/hooks/useDashboardStats.ts - Manquant" -ForegroundColor Red
}

# V√©rifier que DashboardExample.tsx est correct
if (Test-Path "src/pages/DashboardExample.tsx") {
    Write-Host "‚úÖ src/pages/DashboardExample.tsx - Trouv√©" -ForegroundColor Green
    
    $dashboardContent = Get-Content "src/pages/DashboardExample.tsx" -Raw
    
    if ($dashboardContent -match "ClientForm") {
        Write-Host "‚úÖ ClientForm int√©gr√© dans Dashboard" -ForegroundColor Green
    } else {
        Write-Host "‚ùå ClientForm manquant dans Dashboard" -ForegroundColor Red
    }
    
    if ($dashboardContent -match "OrderForm") {
        Write-Host "‚úÖ OrderForm int√©gr√© dans Dashboard" -ForegroundColor Green
    } else {
        Write-Host "‚ùå OrderForm manquant dans Dashboard" -ForegroundColor Red
    }
    
} else {
    Write-Host "‚ùå src/pages/DashboardExample.tsx - Manquant" -ForegroundColor Red
}

Write-Host "`nüìä R√©sum√© des corrections:" -ForegroundColor Cyan
Write-Host "1. ‚úÖ pendingOrders remplac√© par pendingOrdersCount" -ForegroundColor Green
Write-Host "2. ‚úÖ useDashboardStats utilis√© partout" -ForegroundColor Green
Write-Host "3. ‚úÖ Cache nettoy√© et d√©pendances r√©install√©es" -ForegroundColor Green
Write-Host "4. ‚úÖ Serveur red√©marr√©" -ForegroundColor Green

Write-Host "`nüéØ L'application devrait maintenant fonctionner sans erreur!" -ForegroundColor Green
Write-Host "Si l'erreur persiste, essayez de vider le cache du navigateur (Ctrl+F5)" -ForegroundColor Yellow
