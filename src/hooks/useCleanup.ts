import { useEffect } from 'react';

/**
 * Hook pour nettoyer les Ã©couteurs d'Ã©vÃ©nements problÃ©matiques
 * qui peuvent causer des boucles infinies
 */
export const useCleanup = () => {
  useEffect(() => {
    // Nettoyer tous les Ã©couteurs d'Ã©vÃ©nements problÃ©matiques
    const cleanup = () => {
      console.log('ðŸ§¹ Cleaning up problematic event listeners...');
      
      // Supprimer tous les Ã©couteurs d'Ã©vÃ©nements personnalisÃ©s
      const events = ['ff:session:refreshed', 'ff:tab:refocus'];
      events.forEach(eventName => {
        // CrÃ©er un Ã©vÃ©nement factice pour dÃ©clencher le nettoyage
        const fakeEvent = new CustomEvent(eventName, { detail: { cleanup: true } });
        window.dispatchEvent(fakeEvent);
      });
    };

    // Ã‰couter l'Ã©vÃ©nement de nettoyage
    const handleCleanup = () => {
      console.log('ðŸ§¹ Cleanup event received, cleaning up...');
      cleanup();
    };

    window.addEventListener('ff:cleanup', handleCleanup);

    // Nettoyer au montage
    cleanup();

    // Nettoyer au dÃ©montage
    return () => {
      window.removeEventListener('ff:cleanup', handleCleanup);
      cleanup();
    };
  }, []);
};

export default useCleanup;
